<?php
/*
 *  This file is part of the Quantum Unit Solutions development package.
 *
 *  (c) Quantum Unit Solutions <http://github.com/dmeikle/>
 *
 *  For the full copyright and license information, please view the LICENSE
 *  file that was distributed with this source code.
 */

/**
 * Created by PhpStorm.
 * User: user
 * Date: 2/8/2018
 * Time: 9:09 PM
 */

namespace Gossamer\Ra\JWT\Filters;


use Gossamer\Horus\Filters\AbstractFilter;
use Gossamer\Horus\Filters\FilterChain;
use Gossamer\Horus\Http\HttpRequest;
use Gossamer\Horus\Http\HttpResponse;
use Gossamer\Ra\JWT\TokenManager;

class EncryptJwtFilter extends AbstractFilter
{
    const KEY = 'Authorization';

    const IDENTIFIER = 'JWT '; 
    
    public function execute(HttpRequest &$request, HttpResponse &$response, FilterChain &$chain) {

        $manager = new TokenManager($this->httpRequest);
        //$manager->setSession($_SESSION);
        $manager->add('CACHE_ID', $this->getId());
        if(!is_null($request->getAttribute('Client'))) {
            $manager->add('Client', $request->getAttribute('Client')->toArray());
        }

        $jwt = $manager->getEncryptedJwtToken();


        $response->setHeader(self::KEY, self::IDENTIFIER . $jwt);
        $response->setAttribute(self::KEY, self::IDENTIFIER . $jwt);
        $response->setCookie(self::KEY, self::IDENTIFIER . $jwt);

        parent::execute($request, $response, $chain); // TODO: Change the autogenerated stub
    }

    
    private function getId() {

        $id = getSession('CACHE_ID');

        if(is_null($id)) {
            $id = uniqid();
            setSession('CACHE_ID', $id);
        }

        return $id;
    }

}