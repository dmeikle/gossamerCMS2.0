<?php
/*
 *  This file is part of the Quantum Unit Solutions development package.
 *
 *  (c) Quantum Unit Solutions <http://github.com/dmeikle/>
 *
 *  For the full copyright and license information, please view the LICENSE
 *  file that was distributed with this source code.
 */

/**
 * Created by PhpStorm.
 * User: user
 * Date: 5/26/2018
 * Time: 11:58 PM
 */

namespace Gossamer\Aset\Filters;


use Gossamer\Core\Configuration\Traits\LoadConfigurationTrait;
use Gossamer\Horus\EventListeners\Event;
use Gossamer\Horus\Filters\AbstractFilter;
use Gossamer\Horus\Filters\FilterChain;
use Gossamer\Horus\Http\HttpRequest;
use Gossamer\Horus\Http\HttpResponse;
use Gossamer\Aset\Validation\Validator;

class ValidationFilter extends AbstractFilter
{

    use LoadConfigurationTrait;
    
    public function execute(HttpRequest &$request, HttpResponse &$response, FilterChain &$chain) {
        $nodeConfig = $request->getNodeConfig();
        $filepath = $request->getSiteParams()->getSitePath() . DIRECTORY_SEPARATOR . $nodeConfig['componentPath'] . DIRECTORY_SEPARATOR . 'config' . DIRECTORY_SEPARATOR . 'validation' . DIRECTORY_SEPARATOR . $request->getYmlKey() . '.yml';

        $config = $this->loadConfig($filepath);
        //$configLoader = new ConfigLoader($config);

        $validator = new Validator($config, $this->container->get('Logger'));

        $result = $validator->validateRequest($request->getRequestParams()->getPost());
        if($result !== true) {
            $this->setException(array('success'=>'false', 'fields' =>$result));
        }

        parent::execute($request, $response, $chain); // TODO: Change the autogenerated stub
    }
}